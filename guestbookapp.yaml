---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  labels:
    tier: back-end
    app: guestbook
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: back-end
      app: guestbook
  template:
    metadata:
      labels:
        tier: back-end
        app: guestbook
    spec:
      containers:
      - name: master-redis-nautilus
        image: redis:latest
        resources:
          requests:
           memory: "100Mi"
           cpu: "100m"
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master 
spec:
  selector:
    tier: back-end
    app: guestbook
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave
  labels:
    tier: back-end
    app: guestbook
spec:
  replicas: 2
  selector:
    matchLabels:
      tier: back-end
      app: guestbook
  template:
    metadata:
      labels:
        tier: back-end
        app: guestbook
    spec:
      containers:
      - name: slave-redis-nautilus
        image: gcr.io/google_samples/gb-redisslave:v3
        resources:
           requests:
            memory: "100Mi"
            cpu: "100m"
        ports:
        - containerPort: 6379
        env:
        - name: GET_HOSTS_FROM
          value: "dns"
---
apiVersion: v1
kind: Service
metadata:
  name:  redis-slave
spec:
  selector:
    tier: back-end
    app: guestbook
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    tier: front-end
    app: guestbook
    
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: front-end
      app: guestbook
  template:
    metadata:
      labels:
        tier: front-end
        app: guestbook
    spec:
      containers:
      - name: php-redis-nautilus
        image: gcr.io/google-samples/gb-frontend:v4
        resources:
           requests:
             memory: "100Mi"
             cpu: "100m"
        ports:
        - containerPort: 80
        env:
        - name: GET_HOSTS_FROM
          value: "dns"       
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: NodePort
  selector:
    tier: front-end
    app: guestbook
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30009

      